#!/bin/sh

renice +20 $$ > /dev/null 2>&1 # make sure we're being nice

cd $HOME/owl-lisp || exit 1

ulimit -c unlimited # save core if we happen to trigger something nasty

echo "Running on `date`"

# maybe run a round of unit tests
test -x bin/ol && (\
   ME=`date '+%s'`; \
   echo " - tests at `date`"; \
   make random-test > $HOME/aoh/owl/logs/test-$ME.txt 2>&1 \
      && date >> test-runs \
      || ( cp $HOME/aoh/owl/logs/test-$ME.txt $HOME/aoh/owl/logs/fail-$ME.txt; \
           twidge update "Ay, caramba! Test failure after `cat test-runs | wc -l` rounds. See http://haltp.org/aoh/owl/logs/fail-$ME.txt"; \
           rm bin/ol-failed; \
           mv bin/ol bin/ol-failed;))

ROUNDS=`cat test-runs | wc -l`
echo $ROUNDS | grep "[05]000$" && twidge update "$ROUNDS unit test rounds passed since last commit."

# don't use all cpu
sleep 1

# recurse unless updated
test -f $HOME/owl-updated || exec bin/builder

# pull, rebuild and report
make clean;
echo "" > test-runs
WHO=`cat $HOME/owl-updated`
ME=`date '+%s'`
OUT="$HOME/aoh/owl/logs/build-$ME.txt"
rm $HOME/owl-updated $HOME/owl-ok
git pull > $OUT 2>&1 
echo "" >> $OUT
git show -s HEAD^{commit} >> $OUT
echo "" >> $OUT
MSG=`git show -s HEAD^{commit} | tail -n 1 | sed -e 's/^[ \t]*//' | dd bs=1 count=50 2>/dev/null`
STATUS=`make >> $OUT && echo -n "ok" 2>&1 || echo -n "BAD"`
chmod oug+r $HOME/aoh/owl/logs/*.txt
twidge update "Push by $WHO, status $STATUS: \"$MSG\" (http://haltp.org/aoh/owl/logs/build-$ME.txt)"

# tailcall possibly updated self unless a core has been left

test -f *core* && { twidge update "O_ops, I seem to have dropped a core."; exit 2; }

exec bin/builder
