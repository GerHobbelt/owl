#!/bin/bash

# TODO: needed also a convenient way to compare fasl/init.fasl to fasl/ol.fasl
# TODO: pretty autoupdating graphs to somewhere in http://haltp.org/
# TODO: metametrics (fasl size, lines of code, etc) + how to handle in overview?

BESTOF=3

# check where we are and that owl is built
test -f c/ovm.c || { echo "Run me at owl-lisp root directory."; exit 1; }
make

# global deps
for dep in ol time seq
do
   test -x "/usr/bin/$dep" || { echo "I demand /usr/bin/$dep"; exit 1; }
done

ulimit -S -t 600 # kill overly long running benchmark (implies broken owl or microcontroller)

# regex cmd ... → print time in ms if regex matches output, otherwise 0
rextime() {
   REGEX=$1 # output must have a match
   shift
   START=$(ol -e '(time-ms)')
   $@ | grep -q $REGEX && ol -e "(- (time-ms) $START)" || echo "0" # to signal test failed
}

# cmd ... → print time in ms if exits successfully, otherwise 0
justtime() {
   START=$(ol -e '(time-ms)')
   $@ && ol -e "(- (time-ms) $START)" || echo "0" # to signal test failed
}

# regex command ... → print best-of-$BESTOF time in ms
besttime() {
   BEST=1333333337
   for round in $(ol -e "(iota 0 1 $BESTOF)") # "(0" "1" "2)"
   do
      BEST=$(ol -e "(min $(rextime $@) $BEST)")
   done
   echo $BEST
}

# name bench/foo.scm -> print fasl and compiled best-of-n times
scmtimes() {
   FASL=$1
   NAME=$2
   SOURCE=$3
   BESTFASL=$(besttime "^OK$" bin/vm $FASL --run $SOURCE)
   BIN="./$(echo $SOURCE | sed 's/\.scm$//')"
   bin/vm $FASL -x c -O2 -o $BIN.c $SOURCE
   gcc -O2 -o $BIN $BIN.c
   BESTBIN=$(besttime "^OK$" $BIN)
   echo "$FASL, $NAME, ${BESTFASL}ms fasl, ${BESTBIN}ms binary"
}

# custom tests
BOOTTIME=$(justtime bin/vm fasl/ol.fasl --run owl/ol.scm -s none -o tmp/out.fasl)
echo "faslboot fasl/ol.fasl: ${BOOTTIME}ms"
BOOTTIME=$(justtime bin/vm fasl/init.fasl --run owl/ol.scm -s none -o tmp/out.fasl)
echo "faslboot fasl/init.fasl: ${BOOTTIME}ms"

for benchmark in bench/*.scm
do
   NAME=$(echo $benchmark | sed -e 's/bench\///' -e 's/\.scm//')
   scmtimes fasl/ol.fasl $NAME $benchmark
   scmtimes fasl/init.fasl $NAME $benchmark
done


